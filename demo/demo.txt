
polygon ChainId = 137;
base sepolia ChainId = 84532;

1. deploy contracts on both chains
source .env 

// deploy on base 
forge script script/DeployAllContracts.s.sol \
  --rpc-url $BASE_SEPOLIA_RPC_URL \
  --private-key $PRIVATE_KEY \
  --broadcast

Bn254SignatureScheme contract deployed at:  0xcD3a7aa71d7621879B6Ef28bd9fE6BBbE1c4d13a
  RUSD contract deployed at:  0x43748DC0b4735463105c528816f59bB7F37009dE
  Bridge contract deployed at:  0xA3dE7F3E3300691F765A54C7B002E13E8Df2baf7
  Router contract deployed at:  0xA7c60e1109a98858E132D040444AD8eC84F8a4E5

// deploy on polygon
forge script script/DeployAllContracts.s.sol \
  --rpc-url $POLYGON_POS_RPC_URL \
  --private-key $PRIVATE_KEY \
  --broadcast

Bn254SignatureScheme contract deployed at:  0xcD3a7aa71d7621879B6Ef28bd9fE6BBbE1c4d13a
  RUSD contract deployed at:  0x43748DC0b4735463105c528816f59bB7F37009dE
  Bridge contract deployed at:  0xA3dE7F3E3300691F765A54C7B002E13E8Df2baf7
  Router contract deployed at:  0xA7c60e1109a98858E132D040444AD8eC84F8a4E5


2. configure contracts on base 

// permit messages from other src chain ids
cast send 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 "allowDstChainId(uint256,bool)" 137 true \
  --rpc-url $BASE_SEPOLIA_RPC_URL \
  --private-key $PRIVATE_KEY

// map src and dst token addresses and chain ids
cast send 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 "setTokenMapping(uint256,address,address)" 137 0x43748DC0b4735463105c528816f59bB7F37009dE 0x43748DC0b4735463105c528816f59bB7F37009dE \
  --rpc-url $BASE_SEPOLIA_RPC_URL \
  --private-key $PRIVATE_KEY


3. configure contracts on polygon

// permit messages from other src chain ids
cast send 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 "allowDstChainId(uint256,bool)" 84532 true \
  --rpc-url $POLYGON_POS_RPC_URL \
  --private-key $PRIVATE_KEY

// map src and dst token addresses and chain ids
cast send 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 "setTokenMapping(uint256,address,address)" 84532 0x43748DC0b4735463105c528816f59bB7F37009dE 0x43748DC0b4735463105c528816f59bB7F37009dE \
  --rpc-url $POLYGON_POS_RPC_URL \
  --private-key $PRIVATE_KEY

4. make a cross chain transfer request from polygon to base

// mint 11 to sender on source chain
// 10 tokens to bridge + 1 token in fees
cast send 0x43748DC0b4735463105c528816f59bB7F37009dE "mint(address,uint256)" 0xDC21c5F25E196b0C7E13F2C6f3184368059047FF 11e18 \
    --rpc-url $POLYGON_POS_RPC_URL \
    --private-key $PRIVATE_KEY

// approve tokens for router contract on the source chain
cast send 0x43748DC0b4735463105c528816f59bB7F37009dE "approve(address,uint256)" 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 11e18 \
    --rpc-url $POLYGON_POS_RPC_URL \
    --private-key $PRIVATE_KEY

// start agent in another terminal window 
npx ts-node demo/demo.ts

// make a bridge request from polygon pos to base sepolia 
// for 10e18 (send to a random recipient from anvil)
// with a fee of 1e18.
// router collects the fee plus amount to transfer
// and allocate a portion of the fee for the solver
// that fulfills the request on the destination chain id
// and the rest of it for the dcipher threshold network 
// So recipient will get 9e18 on destination chain.
cast send 0xA7c60e1109a98858E132D040444AD8eC84F8a4E5 "bridge(address,uint256,uint256,uint256,address,uint256)" \
    0x43748DC0b4735463105c528816f59bB7F37009dE 10e18 1e18 84532 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 2 \
    --rpc-url $POLYGON_POS_RPC_URL \
    --private-key $PRIVATE_KEY

// recipient token balances on both chain
cast call 0x43748DC0b4735463105c528816f59bB7F37009dE "balanceOf(address)(uint256)" 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \
    --rpc-url $POLYGON_POS_RPC_URL

cast call 0x43748DC0b4735463105c528816f59bB7F37009dE "balanceOf(address)(uint256)" 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 \
    --rpc-url $BASE_SEPOLIA_RPC_URL
